---
name: Deploy_dev
on:
  workflow_dispatch:
    inputs:
      job_environment:
        type: choice
        description: 'Job environment prod or dev'
        required: true
        default: 'dev'
        options:
          - dev
          - prod

env:
  path_bot: bot_code
  image_name: airflow
  repo: ghcr.io
  job_environment: dev


jobs:
  Checkout_repos:
    runs-on:
      - self-hosted
    steps:
      - name: Clean env
        run: rm -rf *

      - name: Clean old Docker images
        run: docker system prune -a -f

      - name: Checkout current repo
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
  
  Build-docker-Airflow:
    needs: [Checkout_repos]
    runs-on:
      - self-hosted
    container:
      image: docker:24.0.5-dind
      env:
        registry-username: ${{ secrets.DOCKER_USERNAME }}
        registry-password: ${{ secrets.DOCKER_PASSWORD }}
      volumes:
        - my_docker_volume:/$GITHUB_WORKSPACE
    steps:
      - name: Run details
        run: |
          echo "Run number: $GITHUB_RUN_NUMBER"
          echo "Image Name: ${{ env.image_name }}"
          echo "See full image> ${{ env.image_name }}:$GITHUB_RUN_NUMBER "

      - name: Build Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: ${{env.image_name}}
          tags: $GITHUB_RUN_NUMBER
          registry: ghcr.io
          dockerfile: dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  Scan:
    needs: [Build-docker-Airflow]
    runs-on:
      - self-hosted
    steps:
      - name: Scan image
        uses: anchore/scan-action@v3.3.6
        with:
          image: ${{ env.repo }}/${{ secrets.DOCKER_USERNAME }}/${{ env.image_name }}:$GITHUB_RUN_NUMBER
          fail-build: false
          registry-username: ${{ secrets.DOCKER_USERNAME }}
          registry-password: ${{ secrets.DOCKER_PASSWORD }}

  Run-terraform:
    needs: [Checkout_repos]
    runs-on:
      - self-hosted
    container:
      image: docker pull hashicorp/terraform:latest
      env:
        do_token: ${{ secrets.DO_TOKEN }}
      volumes:
        - my_docker_volume:/$GITHUB_WORKSPACE
    steps:
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init



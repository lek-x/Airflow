---
name: Deploy
# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      job_environment:
        type: choice
        description: 'Job environment prod or dev'
        required: true
        default: 'dev'
        options:
          - dev
          - prod

env:
  image_name: airflow
  repo: ghcr.io
  job_environment: dev

jobs:
  Build-docker-Airflow:
    runs-on:
      - self-hosted
    container:
      image: docker:24.0.5-dind
      env:
        registry-username: ${{ secrets.DOCKER_USERNAME }}
        registry-password: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Run details
        run: |
          echo "Run number: $GITHUB_RUN_NUMBER"
          echo "Image Name: ${{ env.image_name }}"
          echo "See full image> ${{ env.image_name }}:$GITHUB_RUN_NUMBER "

      - name: Checkout current repo
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Build Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: ${{env.image_name}}
          tags: $GITHUB_RUN_NUMBER
          registry: ghcr.io
          dockerfile: dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  Scan:
    needs: [Build-docker-Airflow]
    runs-on:
      - self-hosted
    steps:
      - name: Scan image
        uses: anchore/scan-action@v3.3.6
        with:
          image: ${{ env.repo }}/${{ secrets.DOCKER_USERNAME }}/${{ env.image_name }}:$GITHUB_RUN_NUMBER
          fail-build: false
          registry-username: ${{ secrets.DOCKER_USERNAME }}
          registry-password: ${{ secrets.DOCKER_PASSWORD }}

  Run-terraform:
    needs: [Scan]
    runs-on:
      - self-hosted
    container:
      image: hashicorp/terraform:latest
      env:
        DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN }}
        aws_access_key: ${{ secrets.DO_S3_ID }}
        aws_secret_key: ${{ secrets.DO_S3_KEY }}
        ENVIRONMENT: ${{ github.event.inputs.job_environment }}
        TF_VAR_airflow_www_pass: ${{ secrets.AIRFLOW_WWW_PASS }}
        TF_VAR_airflow_www_user: ${{ secrets.AIRFLOW_WWW_USER }}
        TF_VAR_db_name: ${{ secrets.DB_NAME }}
        TF_VAR_db_pass: ${{ secrets.DB_PASS }}
        TF_VAR_db_user: ${{ secrets.DB_USER }}
        TF_VAR_docker_username: ${{ secrets.DOCKER_USERNAME }}
        TF_VAR_docker_pass: ${{ secrets.DOCKER_PASSWORD }}
        TF_VAR_conn_type: ${{ secrets.CONN_TYPE }}
        TF_VAR_work_db_user: ${{ secrets.WORK_DB_USER }}
        TF_VAR_work_db_pass: ${{ secrets.WORK_DB_PASS }}
        TF_VAR_work_db_host: ${{ secrets.WORK_DB_HOST }}
        TF_VAR_work_db_port: ${{ secrets.WORK_DB_PORT }}
        TF_VAR_work_db_schema: ${{ secrets.WORK_DB_SCHEMA }}
        TF_VAR_image_name: ghcr.io/lek-x/${{ env.image_name }}:$GITHUB_RUN_NUMBER
    steps:
      - name: Install make
        run: apk add --no-cache make

      - name: Checkout current repo
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: make init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Create workspace ${{ github.event.inputs.job_environment }}
        run: make workspace

      - name: Terraform Plan
        id: plan
        run: make plan

      - name: Terraform Apply
        id: apply
        run: make apply

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: |
            ./ansible/key.pem
            ./ansible/inventory

  Run-Ansible:
    needs: [Run-terraform]
    runs-on:
      - self-hosted
    container:
      image: cytopia/ansible
      env:
        DIGITALOCEAN_TOKEN: ${{ secrets.DO_TOKEN }}
        aws_access_key: ${{ secrets.DO_S3_ID }}
        aws_secret_key: ${{ secrets.DO_S3_KEY }}
        ENVIRONMENT: ${{ github.event.inputs.job_environment }}

    steps:
      - name: Checkout current repo
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Install additional tools
        run: apk add wget unzip openssh-client make --no-cache

      - name: Download terraform
        run: wget https://releases.hashicorp.com/terraform/1.5.6/terraform_1.5.6_linux_amd64.zip -O /terraform.zip -q

      - name: Unzip terraform
        run: unzip /terraform.zip -d /usr/local/bin

      - name: Change permissions
        run: chmod 777 /usr/local/bin/terraform && export PATH=$PATH:/usr/local/bin

      - name: Terraform Init
        id: init
        run: make init

      - name: Terraform select workspace
        run: make workspace

      - name: Get inventory file from tf state
        run: terraform output 'ansible_inventory'  | head -n -1 |tail -n +2 | tee ./ansible/inventory

      - name: Get SSH key from state
        run: terraform output -raw private_key | tee ./ansible/key.pem && chmod 600 ./ansible/key.pem

      - name: Run playbook
        # yamllint disable-line rule:line-length
        run: ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook -i ansible/inventory --private-key ansible/key.pem ansible/playbook.yml -D
